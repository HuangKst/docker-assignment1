services:

  api:
    image: doconnor/movies-api:1.0
    container_name: movies-api
    ports:
      - '9000:9000'
    environment:
      MONGODB_URI: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongo:27017/moviesDB
      REDIS_URI: redis://redis
      ENABLE_WRITING_HANDLERS: 'false'
    depends_on:
      - mongo
      - redis
    networks:
      - api_db_net
      - api_redis_net

  
  mongo:
    image: mongo:8.0-rc
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - api_db_net
      - express_db_net


  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - api_redis_net
  
  mongo-express:
    image: mongo-express:1.0-20-alpine3.19
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - '8081:8081'
    networks:
      - express_db_net
  
  seeder:
    image: node:latest
    container_name: seeder
    build:
      context: ./seeder
    volumes:
      - ./seeder:/usr/src/app
    working_dir: /usr/src/app
    command: node seed.js
    depends_on:
      - mongo
    networks:
      - api_db_net


  networks:
  api_db_net:
  #movies-api and mongo
    driver: bridge
  api_redis_net:
  #movies-api and redis 
    driver: bridge
  express_db_net:
  #mongo and mongo-express 
    driver: bridge

  volumes:
    mongo_data: